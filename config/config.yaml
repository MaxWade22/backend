App:
  port: ":8080"
  host: "127.0.0.1"
  url: "127.0.0.1:8080"

Mysql:
  dsn: root:qz1731978669@tcp(8.137.100.0:3306)/backend?charset=utf8mb4&parseTime=True&loc=Local

Redis:
  addr: 8.137.100.0:6379
  password: "1234"
  db: 0
  poolSize: 30
  minIdleConn: 30

Capatcha:
  height: 80   # 验证码图片高度
  width: 240  # 验证码图片宽度
  length: 6  #验证码的长度
  maxskew: 0.9 #数字的最大倾斜角度
  dotcount: 120  #图片背景里的混淆点数量
  expire_time: 15 # 过期时间，单位是分钟
  debug_expire_time: 10080 # debug 模式下的过期时间，方便本地开发调试
  testing_key: "captcha_skip_test"  # 非 production 环境，使用此 key 可跳过验证，方便测试

Mail:
#  // 默认是 Mailhog 的配置
  smtp:
    host: smtp.qq.com
#    host:  smtp.aliyun.com
    port:  587
    username: 1731978669@qq.com
    password:  pgyrpvxaxvngdced
    ssl_port: 465
  from:
    address: 1731978669@qq.com
    name: 邮箱助手

Verifycode:
  code_length: 6

Algorithm:
  url: http://127.0.0.1:8082/parse/json

#时区
TimeZone: Asia/Shanghai

#应用的名字
Name: test_backend

#调试模式
Debug: false

#过期时间，上线的时候记得改
expire_time: 12000000

#加密会话、JWT 加密
key: 33446a9dcf9ea060a0a6532b166da32f304af0de

# 允许刷新时间，2个月
max_refresh_time: 86400

Log:
#  // 日志级别，必须是以下这些选项：
#  // "debug" —— 信息量大，一般调试时打开。系统模块详细运行的日志，例如 HTTP 请求、数据库请求、发送邮件、发送短信
#  // "info" —— 业务级别的运行日志，如用户登录、用户退出、订单撤销。
#  // "warn" —— 感兴趣、需要引起关注的信息。 例如，调试时候打印调试信息（命令行输出会有高亮）。
#  // "error" —— 记录错误信息。Panic 或者 Error。如数据库连接错误、HTTP 端口被占用等。一般生产环境使用的等级。
#  // 以上级别从低到高，level 值设置的级别越高，记录到日志的信息就越少
#  // 开发时推荐使用 "debug" 或者 "info" ，生产环境下使用 "error"
  "level": debug

#  // 日志的类型，可选：
#  // "single" 独立的文件
#  // "daily" 按照日期每日一个
  "type": single

#  // 日志文件路径
  "filename": storage/logs/logs.log
#  // 每个日志文件保存的最大尺寸 单位：M
  "max_size": 64
#  // 最多保存日志文件数，0 为不限，MaxAge 到了还是会删
  "max_backup": 5
#  // 最多保存多少天，7 表示一周前的日志会被删除，0 表示不删
  "max_age": 30
#  // 是否压缩，压缩日志不方便查看，我们设置为 false（压缩可节省空间）
  "compress": false